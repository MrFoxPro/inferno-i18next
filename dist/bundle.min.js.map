{"version":3,"file":"bundle.min.js","sources":["../src/Provider.js","../src/translate.js","../src/T.js"],"sourcesContent":["import { Component } from 'inferno';\nimport { throwError } from 'inferno-shared';\n\nexport default class Provider extends Component {\n\n  /**\n   * Create a new i18next provider instance.\n   *\n   * @param {object} props\n   * @param {object} context\n   * @throws {object} Error\n   * @returns {void}\n   */\n  constructor(props, context) {\n    super(props, context);\n    if (!props.i18next) {\n      throwError('an instance of i18next is required');\n    }\n  }\n\n  /**\n   * Return the context for child components.\n   *\n   * @returns {object}\n   */\n  getChildContext() {\n    return {i18next: this.props.i18next};\n  }\n\n  /**\n   * Handle the new props before it gets accepted.\n   *\n   * @param {object} nextProps\n   * @throws {object} Error\n   * @returns {void}\n   */\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.i18next !== this.props.i18next) {\n      throwError('changing of i18next instance is not supported');\n    }\n  }\n\n  /**\n   * Render the component.\n   *\n   * @returns {object}\n   */\n  render() {\n    return this.props.children;\n  }\n\n}\n","import { Component } from 'inferno';\nimport { createElement } from 'inferno-create-element';\nimport { isArray, isString, throwError } from 'inferno-shared';\n\n/**\n * Make the target component translatable.\n *\n * @param {object} TargetComponent\n * @param {string|array} ns\n * @returns {object}\n */\nfunction translate(TargetComponent, ns) {\n  class Translate extends Component {\n\n    /**\n     * Provided i18next instance.\n     *\n     * @type {object}\n     */\n    i18next;\n\n    /**\n     * Namespace/s to be used.\n     *\n     * @type {string|array}\n     */\n    ns;\n\n    /**\n     * Fixed i18next translate function.\n     *\n     * @type {function}\n     */\n    t;\n\n    /**\n     * Create a new translate HOC instance.\n     *\n     * @param {object} props\n     * @param {object} context\n     * @throws {object} Error\n     * @returns {void}\n     */\n    constructor(props, context) {\n      super(props, context);\n      if (!context.i18next) {\n        throwError('an instance of i18next must be provided');\n      }\n      this.i18next = context.i18next;\n      this.ns = ns || this.i18next.options.defaultNS;\n    }\n\n    /**\n     * Return the context for child components.\n     *\n     * @returns {object}\n     */\n    getChildContext() {\n      return {\n        t: this.t,\n        i18next: this.i18next,\n      };\n    }\n\n    /**\n     * Handle the component before it gets mounted to the DOM.\n     *\n     * @returns {void}\n     */\n    componentWillMount() {\n      this.t = this.i18next.getFixedT(null, this.ns);\n    }\n\n    /**\n     * Render the component.\n     *\n     * @returns {object}\n     */\n    render() {\n      return createElement(TargetComponent, {\n        ...this.props,\n        t: this.t,\n        i18next: this.i18next,\n      });\n    }\n\n  }\n\n  Translate.displayName = 'Translate' + getDisplayName(TargetComponent);\n  return Translate;\n}\n\n//  ____ ______________.___.____    .___________________.___.\n// |    |   \\__    ___/|   |    |   |   \\__    ___/\\__  |   |\n// |    |   / |    |   |   |    |   |   | |    |    /   |   |\n// |    |  /  |    |   |   |    |___|   | |    |    \\____   |\n// |______/   |____|   |___|_______ \\___| |____|    / ______|\n//                                 \\/               \\/\n\nfunction getDisplayName(component) {\n  return component.displayName || component.name || 'Component';\n}\n\n//  __      ____________    _____ _________________________________________\n// /  \\    /  \\______   \\  /  _  \\\\______   \\______   \\_   _____/\\______   \\\n// \\   \\/\\/   /|       _/ /  /_\\  \\|     ___/|     ___/|    __)_  |       _/\n//  \\        / |    |   \\/    |    \\    |    |    |    |        \\ |    |   \\\n//   \\__/\\  /  |____|_  /\\____|__  /____|    |____|   /_______  / |____|_  /\n//        \\/          \\/         \\/                           \\/         \\/\n\nexport default function wrap(arg) {\n  if (isString(arg) || isArray(arg)) {\n    return component => translate(component, arg);\n  }\n  return translate(arg);\n}\n","import { Component, cloneVNode } from 'inferno';\nimport { createElement } from 'inferno-create-element';\nimport { VNodeFlags } from 'inferno-vnode-flags';\nimport HTML from 'html-parse-stringify2';\n\nfunction hasChildren(node) {\n  return node && (node.children || (node.props && node.props.children));\n}\n\nfunction getChildren(node) {\n  return node && (node.children ? node.children : node.props && node.props.children);\n}\n\nfunction nodesToString(mem, children) {\n\tchildren = children ? (Array.isArray(children) ? children : [children]) : [];\n\n\tchildren.forEach((child, i) => {\n    const elementKey = `${i}`;\n    if (typeof child === 'string') {\n      mem = `${mem}${child}`;\n    } else if (hasChildren(child)) {\n      mem = `${mem}<${elementKey}>${nodesToString('', getChildren(child), i + 1)}</${elementKey}>`;\n    } else if (isValidElement(child)) {\n      mem = `${mem}<${elementKey}></${elementKey}>`;\n    } else if (typeof child === 'object') {\n      const clone = { ...child };\n\t\t\tconst format = clone.format;\n      delete clone.format;\n\n\t\t\tconst keys = Object.keys(clone);\n      if (format && keys.length === 1) {\n        mem = `${mem}<${elementKey}>{{${keys[0]}, ${format}}}</${elementKey}>`;\n      } else if (keys.length === 1) {\n        mem = `${mem}<${elementKey}>{{${keys[0]}}}</${elementKey}>`;\n      } else if (console && console.warn) {\n        // not a valid interpolation object (can only contain one value plus format)\n        console.warn(`react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.`, child)\n      }\n    } else if (console && console.warn) {\n      console.warn(`react-i18next: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.`, child)\n    }\n  });\n\n  return mem;\n}\n\nfunction renderNodes(children, targetString, i18n) {\n  if (targetString === '') return [];\n\n  // parse ast from string with additional wrapper tag\n  // -> avoids issues in parser removing prepending text nodes\n  const ast = HTML.parse(`<0>${targetString}</0>`);\n\n\tfunction mapAST(reactNodes, astNodes) {\n\t\treactNodes = reactNodes ? (Array.isArray(reactNodes) ? reactNodes : [reactNodes]) : [];\n\t\tastNodes = astNodes ? (Array.isArray(astNodes) ? astNodes : [astNodes]) : [];\n\n    return astNodes.reduce((mem, node, i) => {\n      if (node.type === 'tag') {\n        const child = reactNodes[parseInt(node.name, 10)] || {};\n        const isElement = isValidElement(child);\n\n        if (typeof child === 'string') {\n          mem.push(node.children[0].content); // original: mem.push(child)\n        } else if (hasChildren(child)) {\n\t\t\t\t\tconst inner = mapAST(getChildren(child), node.children);\n          mem.push(cloneVNode(\n            child,\n            { ...child.props, key: i },\n            inner\n          ));\n        } else if (typeof child === 'object' && !isElement) {\n          const interpolated = i18n.services.interpolator.interpolate(node.children[0].content, child, i18n.language);\n          mem.push(interpolated);\n        } else {\n          mem.push(child);\n        }\n      } else if (node.type === 'text') {\n\t\t\t\tmem.push(node.content);\n      }\n      return mem;\n\t\t}, []);\n  }\n\n  // call mapAST with having react nodes nested into additional node like\n  // we did for the string ast from translation\n\t// return the children of that extra node to get expected result\n\tconst result = mapAST([{ dummy: true, children, flags: 4 }], ast);\n  return getChildren(result[0]);\n}\n\nfunction isValidElement(elem) {\n\t// is valid inferno vnode https://infernojs.org/docs/api/inferno\n\treturn (elem.flags & (VNodeFlags.Component | VNodeFlags.Element)) > 0;\n}\n\n\nexport default class T extends Component {\n  render() {\n\t\tconst contextAndProps = { i18next: this.context.i18next, t: this.context.i18next.getFixedT(), ...this.props };\n    const { children, count, parent, i18nKey, i18next, t: tFromContextAndProps, ...additionalProps } = contextAndProps;\n    const t = tFromContextAndProps || i18next.t.bind(i18next);\n\n\t\tconst useAsParent = parent !== undefined ? parent : 'div';\n\n    const defaultValue = nodesToString('', children);\n    const translation = i18nKey ? t(i18nKey, { interpolation: { prefix: '#$?', suffix: '?$#' }, defaultValue, count }) : defaultValue;\n\n\t\treturn createElement(\n      useAsParent,\n      additionalProps,\n      renderNodes(children, translation, i18next)\n    );\n  }\n}"],"names":["Provider","props","context","i18next","this","nextProps","children","Component","translate","TargetComponent","ns","component","Translate","_this","options","defaultNS","t","getFixedT","createElement","displayName","name","hasChildren","node","getChildren","isValidElement","elem","flags","VNodeFlags","Element","T","contextAndProps","count","parent","i18nKey","tFromContextAndProps","additionalProps","bind","useAsParent","undefined","defaultValue","nodesToString","mem","Array","isArray","forEach","child","i","elementKey","clone","format","keys","Object","length","console","warn","translation","interpolation","prefix","suffix","targetString","i18n","mapAST","reactNodes","astNodes","reduce","type","parseInt","isElement","push","content","inner","cloneVNode","key","interpolated","services","interpolator","interpolate","language","dummy","HTML","parse","renderNodes","arg","isString"],"mappings":"+sDAGqBA,yBAUPC,EAAOC,4EACXD,EAAOC,WACRD,EAAME,sBACE,0GAULA,QAASC,KAAKH,MAAME,2DAUJE,GACpBA,EAAUF,UAAYC,KAAKH,MAAME,sBACxB,yFAUNC,KAAKH,MAAMK,gBA7CgBC,aCQtC,SAASC,EAAUC,EAAiBC,OAwFZC,EAvFhBC,yBA+BQX,EAAOC,4EACXD,EAAOC,WACRA,EAAQC,sBACA,6CAERA,QAAUD,EAAQC,UAClBO,GAAKA,GAAMG,EAAKV,QAAQW,QAAQC,gFAUhCX,KAAKY,UACCZ,KAAKD,2DAUXa,EAAIZ,KAAKD,QAAQc,UAAU,KAAMb,KAAKM,4CASpCQ,gBAAcT,OAChBL,KAAKH,SACLG,KAAKY,UACCZ,KAAKD,kBAtEII,sBA4EdY,YAAc,cAWFR,EAX+BF,GAYpCU,aAAeR,EAAUS,MAAQ,aAX3CR,ECpFT,SAASS,EAAYC,UACZA,IAASA,EAAKhB,UAAagB,EAAKrB,OAASqB,EAAKrB,MAAMK,UAG7D,SAASiB,EAAYD,UACZA,IAASA,EAAKhB,SAAWgB,EAAKhB,SAAWgB,EAAKrB,OAASqB,EAAKrB,MAAMK,UAiF3E,SAASkB,EAAeC,UAEfA,EAAKC,OAASC,aAAWpB,UAAYoB,aAAWC,UAAY,MAIhDC,wKAEbC,KAAoB3B,QAASC,KAAKF,QAAQC,QAASa,EAAGZ,KAAKF,QAAQC,QAAQc,aAAgBb,KAAKH,OAC5FK,EAA2FwB,EAA3FxB,SAAUyB,EAAiFD,EAAjFC,MAAOC,EAA0EF,EAA1EE,OAAQC,EAAkEH,EAAlEG,QAAS9B,EAAyD2B,EAAzD3B,QAAY+B,EAA6CJ,EAAhDd,EAA4BmB,0HAAoBL,yDAC7Fd,EAAIkB,GAAwB/B,EAAQa,EAAEoB,KAAKjC,GAE7CkC,OAAyBC,IAAXN,EAAuBA,EAAS,MAE5CO,EA5FV,SAASC,EAAcC,EAAKnC,YAChBA,EAAYoC,MAAMC,QAAQrC,GAAYA,GAAYA,OAEpDsC,QAAQ,SAACC,EAAOC,OAChBC,KAAgBD,KACD,iBAAVD,OACAJ,EAAMI,OACV,GAAIxB,EAAYwB,KACZJ,MAAOM,MAAcP,EAAc,GAAIjB,EAAYsB,SAAmBE,WAC1E,GAAIvB,EAAeqB,KACfJ,MAAOM,QAAgBA,WAC3B,GAAqB,qBAAVF,gBAAAA,IAAoB,KAC9BG,OAAaH,GAChBI,EAASD,EAAMC,cACXD,EAAMC,WAEVC,EAAOC,OAAOD,KAAKF,GAClBC,GAA0B,IAAhBC,EAAKE,SACRX,MAAOM,QAAgBG,EAAK,QAAOD,SAAaF,MAChC,IAAhBG,EAAKE,SACLX,MAAOM,QAAgBG,EAAK,UAASH,MACrCM,SAAWA,QAAQC,cAEpBA,wJAAyJT,QAE1JQ,SAAWA,QAAQC,cACpBA,kLAAmLT,KAIxLJ,EA8DgBD,CAAc,GAAIlC,GACjCiD,EAActB,EAAUjB,EAAEiB,GAAWuB,eAAiBC,OAAQ,MAAOC,OAAQ,OAASnB,eAAcR,UAAWQ,SAEhHrB,gBACHmB,EACAF,EAhEN,SAAqB7B,EAAUqD,EAAcC,SACtB,KAAjBD,KAyCGpC,WAnCCsC,EAAOC,EAAYC,YACdD,EAAcpB,MAAMC,QAAQmB,GAAcA,GAAcA,SAC1DC,EAAYrB,MAAMC,QAAQoB,GAAYA,GAAYA,OAE3CC,OAAO,SAACvB,EAAKnB,EAAMwB,MACf,QAAdxB,EAAK2C,KAAgB,KACjBpB,EAAQiB,EAAWI,SAAS5C,EAAKF,KAAM,SACvC+C,EAAY3C,EAAeqB,MAEZ,iBAAVA,IACLuB,KAAK9C,EAAKhB,SAAS,GAAG+D,cACrB,GAAIhD,EAAYwB,GAAQ,KAC5ByB,EAAQT,EAAOtC,EAAYsB,GAAQvB,EAAKhB,YACrC8D,KAAKG,aACP1B,OACKA,EAAM5C,OAAOuE,IAAK1B,IACvBwB,SAEG,GAAqB,qBAAVzB,gBAAAA,KAAuBsB,IAInCC,KAAKvB,OAJyC,KAC5C4B,EAAeb,EAAKc,SAASC,aAAaC,YAAYtD,EAAKhB,SAAS,GAAG+D,QAASxB,EAAOe,EAAKiB,YAC9FT,KAAKK,QAIY,SAAdnD,EAAK2C,QACdG,KAAK9C,EAAK+C,gBAEL5B,OAOGoB,GAAUiB,OAAO,EAAMxE,WAAUoB,MAAO,IApC1CqD,EAAKC,YAAYrB,WAqCH,IAuBtBsB,CAAY3E,EAAUiD,EAAapD,WAdVI,sCDahB,SAAc2E,UACvBC,WAASD,IAAQvC,UAAQuC,GACpB,mBAAa1E,EAAUG,EAAWuE,IAEpC1E,EAAU0E"}