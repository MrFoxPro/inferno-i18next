{"version":3,"file":"bundle.min.js","sources":["../src/translate.js","../src/Provider.js"],"sourcesContent":["import Component from 'inferno-component';\nimport createElement from 'inferno-create-element';\nimport { isArray, isString, throwError } from 'inferno-shared';\n\n/**\n * Make the target component translatable.\n *\n * @param {object} TargetComponent\n * @param {string|array} ns\n * @returns {object}\n */\nfunction translate(TargetComponent, ns) {\n  class Translate extends Component {\n\n    /**\n     * Provided i18next instance.\n     *\n     * @type {object}\n     */\n    i18next;\n\n    /**\n     * Namespace/s to be used.\n     *\n     * @type {string|array}\n     */\n    ns;\n\n    /**\n     * Fixed i18next translate function.\n     *\n     * @type {function}\n     */\n    t;\n\n    /**\n     * Create a new translate HOC instance.\n     *\n     * @param {object} props\n     * @param {object} context\n     * @throws {object} Error\n     * @returns {void}\n     */\n    constructor(props, context) {\n      super(props, context);\n      if (!context.i18next) {\n        throwError('an instance of i18next must be provided');\n      }\n      this.i18next = context.i18next;\n      this.ns = ns || this.i18next.options.defaultNS;\n    }\n\n    /**\n     * Return the context for child components.\n     *\n     * @returns {object}\n     */\n    getChildContext() {\n      return {\n        t: this.t,\n        i18next: this.i18next,\n      };\n    }\n\n    /**\n     * Handle the component before it gets mounted to the DOM.\n     *\n     * @returns {void}\n     */\n    componentWillMount() {\n      this.t = this.i18next.getFixedT(null, this.ns);\n    }\n\n    /**\n     * Render the component.\n     *\n     * @returns {object}\n     */\n    render() {\n      return createElement(TargetComponent, {\n        ...this.props,\n        t: this.t,\n        i18next: this.i18next,\n      });\n    }\n\n  }\n\n  Translate.displayName = 'Translate' + getDisplayName(TargetComponent);\n  return Translate;\n}\n\n//  ____ ______________.___.____    .___________________.___.\n// |    |   \\__    ___/|   |    |   |   \\__    ___/\\__  |   |\n// |    |   / |    |   |   |    |   |   | |    |    /   |   |\n// |    |  /  |    |   |   |    |___|   | |    |    \\____   |\n// |______/   |____|   |___|_______ \\___| |____|    / ______|\n//                                 \\/               \\/\n\nfunction getDisplayName(component) {\n  return component.displayName || component.name || 'Component';\n}\n\n//  __      ____________    _____ _________________________________________\n// /  \\    /  \\______   \\  /  _  \\\\______   \\______   \\_   _____/\\______   \\\n// \\   \\/\\/   /|       _/ /  /_\\  \\|     ___/|     ___/|    __)_  |       _/\n//  \\        / |    |   \\/    |    \\    |    |    |    |        \\ |    |   \\\n//   \\__/\\  /  |____|_  /\\____|__  /____|    |____|   /_______  / |____|_  /\n//        \\/          \\/         \\/                           \\/         \\/\n\nexport default function wrap(arg) {\n  if (isString(arg) || isArray(arg)) {\n    return component => translate(component, arg);\n  }\n  return translate(arg);\n}\n","import Component from 'inferno-component';\nimport { throwError } from 'inferno-shared';\n\nexport default class Provider extends Component {\n\n  /**\n   * Create a new i18next provider instance.\n   *\n   * @param {object} props\n   * @param {object} context\n   * @throws {object} Error\n   * @returns {void}\n   */\n  constructor(props, context) {\n    super(props, context);\n    if (!props.i18next) {\n      throwError('an instance of i18next is required');\n    }\n  }\n\n  /**\n   * Return the context for child components.\n   *\n   * @returns {object}\n   */\n  getChildContext() {\n    return {i18next: this.props.i18next};\n  }\n\n  /**\n   * Handle the new props before it gets accepted.\n   *\n   * @param {object} nextProps\n   * @throws {object} Error\n   * @returns {void}\n   */\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.i18next !== this.props.i18next) {\n      throwError('changing of i18next instance is not supported');\n    }\n  }\n\n  /**\n   * Render the component.\n   *\n   * @returns {object}\n   */\n  render() {\n    return this.props.children;\n  }\n\n}\n"],"names":["translate","TargetComponent","ns","Translate","props","context","i18next","_this","options","defaultNS","Component","this","t","getFixedT","createElement","displayName","getDisplayName","component","name","Provider","nextProps","children","arg","isString","isArray"],"mappings":"6aAWA,SAASA,EAAUC,EAAiBC,OAC5BC,yBA+BQC,EAAOC,4EACXD,EAAOC,WACRA,EAAQC,sBACA,6CAERA,QAAUD,EAAQC,UAClBJ,GAAKA,GAAMK,EAAKD,QAAQE,QAAQC,uBArCjBC,yDA+CfC,KAAKC,UACCD,KAAKL,2DAUXM,EAAID,KAAKL,QAAQO,UAAU,KAAMF,KAAKT,4CASpCY,EAAcb,OAChBU,KAAKP,SACLO,KAAKC,UACCD,KAAKL,6BAMVS,YAAc,YAAcC,EAAef,GAC9CE,EAUT,SAASa,EAAeC,UACfA,EAAUF,aAAeE,EAAUC,MAAQ,69DCjG/BC,yBAUPf,EAAOC,4EACXD,EAAOC,WACRD,EAAME,sBACE,mDAbqBI,uDAuB1BJ,QAASK,KAAKP,MAAME,2DAUJc,GACpBA,EAAUd,UAAYK,KAAKP,MAAME,sBACxB,yFAUNK,KAAKP,MAAMiB,2CD8DtB,SAA6BC,UACvBC,WAASD,IAAQE,UAAQF,GACpB,mBAAatB,EAAUiB,EAAWK,IAEpCtB,EAAUsB"}